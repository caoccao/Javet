name: Linux Build Node and V8 Image
on:
  workflow_dispatch:
    inputs:
      skip_base_jvm:
        default: false
        type: boolean
      skip_base_v8:
        default: false
        type: boolean
      skip_base_node:
        default: false
        type: boolean
  push:
    paths:
      - '.github/workflows/**'
      - 'docker/**'
      - 'scripts/python/**'
      - 'scripts/shell/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_REPO_JAVET: ${{ secrets.DOCKERHUB_REPO_JAVET }}
  JAVET_NODE_VERSION: 18.12.1
  JAVET_V8_VERSION: 10.8.168.20

# if we skip a job using a job level `if` condition, then any dependent jobs also don't run.
# we can skip a step of the job, using a step level `if` condition.
# however GitHub doesn't support skipping all subsequent steps of a job.
# we need to add the condition to every step.

jobs:
  publish_base_jvm:
    name: Ubuntu, build tools and JDK 8 - Publish container image
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        if: inputs.skip_base_jvm == false
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Checkout the code
        if: inputs.skip_base_jvm == false
        uses: actions/checkout@v3

      - name: Build docker image
        if: inputs.skip_base_jvm == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-jvm-latest
          echo 'IMAGE_TAG is ${IMAGE_TAG}'
          docker build \
            -t ${IMAGE_TAG} \
            -f docker/linux-x86_64/base_jvm.Dockerfile .

      - name: Publish the docker image
        if: inputs.skip_base_jvm == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-jvm-latest
          docker push ${IMAGE_TAG}

  publish_base_v8:
    needs: [publish_base_jvm]
    name: V8 - Publish container image with source and compiled binaries
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        if: inputs.skip_base_v8 == false
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Checkout the code
        if: inputs.skip_base_v8 == false
        uses: actions/checkout@v3

      - name: Build docker image
        if: inputs.skip_base_v8 == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-v8-${{ env.JAVET_V8_VERSION }}
          echo 'IMAGE_TAG is ${IMAGE_TAG}'
          docker build \
            -t ${IMAGE_TAG} \
            --build-arg JAVET_REPO=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }} \
            --build-arg JAVET_V8_VERSION=${{ env.JAVET_V8_VERSION }} \
            -f docker/linux-x86_64/base_v8.Dockerfile .

      - name: Publish the docker image
        if: inputs.skip_base_v8 == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-v8-${{ env.JAVET_V8_VERSION }}
          docker push ${IMAGE_TAG}

  publish_base_node:
    needs: [publish_base_jvm]
    name: Node.js - Publish container image with source and compiled binaries
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        if: inputs.skip_base_node == false
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Checkout the code
        if: inputs.skip_base_node == false
        uses: actions/checkout@v3

      - name: Build docker image
        if: inputs.skip_base_node == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-node-${{ env.JAVET_NODE_VERSION }}
          echo 'IMAGE_TAG is ${IMAGE_TAG}'
          docker build \
            -t ${IMAGE_TAG} \
            --build-arg JAVET_REPO=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }} \
            --build-arg JAVET_NODE_VERSION=${{ env.JAVET_NODE_VERSION }} \
            -f docker/linux-x86_64/base_node.Dockerfile .

      - name: Publish the docker image
        if: inputs.skip_base_node == false
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-base-node-${{ env.JAVET_NODE_VERSION }}
          docker push ${IMAGE_TAG}

  publish_v8_node:
    needs: [publish_base_v8, publish_base_node]
    name: V8 and Node.js - Publish container image with V8 source and binaries and Node.js source and binaries
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Build docker image
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-v8-${{ env.JAVET_V8_VERSION }}_node-${{ env.JAVET_NODE_VERSION }}
          echo 'IMAGE_TAG is ${IMAGE_TAG}'
          docker build \
            -t ${IMAGE_TAG} \
            --build-arg JAVET_REPO=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }} \
            --build-arg JAVET_V8_VERSION=${{ env.JAVET_V8_VERSION }} \
            --build-arg JAVET_NODE_VERSION=${{ env.JAVET_NODE_VERSION }} \
            -f docker/linux-x86_64/base_node_v8.Dockerfile .

      - name: Publish the docker image
        run: |
          export IMAGE_TAG=${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKERHUB_REPO_JAVET }}:x86_64-v8-${{ env.JAVET_V8_VERSION }}_node-${{ env.JAVET_NODE_VERSION }}
          docker push ${IMAGE_TAG}
