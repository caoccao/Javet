name: Windows x86_64 Build

concurrency:
  group: windows_x86_64_build_${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_dispatch:

env:
  JAVET_NODE_VERSION: 22.15.1
  JAVET_V8_VERSION: 13.7.152.9
  JAVET_VERSION: 4.1.4
  ROOT: D:\a\Javet

jobs:
  build_javet_v8:
    strategy:
      matrix:
        include:
          - name: i18n
            cmake_flag: -DENABLE_I18N=1
            v8_flag: v8_enable_i18n_support=true
          - name: non-i18n
            cmake_flag:
            v8_flag: v8_enable_i18n_support=false

    name: Build Javet V8 ${{ matrix.name }}
    runs-on: windows-latest

    steps:

    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Setup Path
      run: |
        echo "${{ env.ROOT }}\google\depot_tools" >> $GITHUB_PATH

    - name: Build V8
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      shell: bash
      run: |
        cd ..
        mkdir google
        cd google
        git clone --depth=10 --branch=main https://chromium.googlesource.com/chromium/tools/depot_tools.git
        cd depot_tools
        git checkout remotes/origin/main
        cd ..
        depot_tools/fetch.bat v8
        cd v8
        git checkout ${{ env.JAVET_V8_VERSION }}
        cd ..
        depot_tools/gclient.bat sync -D
        cd v8
        mkdir -p out.gn/x64.release
        cp ../../Javet/scripts/v8/gn/windows-x86_64-${{ matrix.name }}-args.gn out.gn/x64.release/args.gn
        ../depot_tools/gn.bat gen out.gn/x64.release
        python3 ../../Javet/scripts/python/patch_v8_build.py -p ./
        ../depot_tools/ninja.bat -C out.gn/x64.release v8_monolith || python3 ../../Javet/scripts/python/patch_v8_build.py -p ./
        ../depot_tools/ninja.bat -C out.gn/x64.release v8_monolith
        mv out.gn out.gn.${{ matrix.name }}

    - name: Copy the i18n
      if: matrix.name == 'i18n'
      run: |
        mkdir icu-v8
        copy ..\google\v8\third_party\icu\common\*.dat icu-v8

    - name: Setup JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 8

    - name: Setup Cmake
      uses: jwlawson/actions-setup-cmake@v2.0
      with:
        cmake-version: '3.23.x'

    - name: Build Javet JNI
      run: |
        cd ${{ env.ROOT }}\Javet\cpp
        .\build-windows.cmd -DV8_DIR=${{ env.ROOT }}\google\v8 -T ClangCL ${{ matrix.cmake_flag }}

    - name: Upload the Artifact
      uses: actions/upload-artifact@v4
      with:
        name: javet-windows-v8-x86_64-${{ env.JAVET_VERSION }}-${{ matrix.name }}
        path: src\main\resources\*.dll

    - name: Upload the i18n
      uses: actions/upload-artifact@v4
      if: matrix.name == 'i18n'
      with:
        name: icu-v8
        path: icu-v8\*.dat

  build_javet_node:
    strategy:
      matrix:
        include:
          - name: i18n
            cmake_flag: -DENABLE_I18N=1
            node_flag: full-icu
          - name: non-i18n
            cmake_flag:
            node_flag: without-intl

    name: Build Javet Node ${{ matrix.name }}
    runs-on: windows-latest

    steps:

    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Install NASM
      run: choco install nasm

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' 

    - name: Build Node.js
      run: |
        cd ${{ env.ROOT }}
        git clone https://github.com/nodejs/node.git
        cd node
        git checkout v${{ env.JAVET_NODE_VERSION }}
        .\vcbuild.bat static ${{ matrix.node_flag }} vs2022
        move out out.${{ matrix.name }}

    - name: Copy the i18n
      if: matrix.name == 'i18n'
      run: |
        mkdir icu-node
        copy ..\node\deps\icu-tmp\*.dat icu-node

    - name: Setup JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 8

    - name: Setup Cmake
      uses: jwlawson/actions-setup-cmake@v2.0
      with:
        cmake-version: '3.23.x'

    - name: Build Javet JNI
      run: |
        cd ${{ env.ROOT }}\Javet\cpp
        .\build-windows.cmd -DNODE_DIR=${{ env.ROOT }}\node ${{ matrix.cmake_flag }}

    - name: Upload the Artifact
      uses: actions/upload-artifact@v4
      with:
        name: javet-windows-node-x86_64-${{ env.JAVET_VERSION }}-${{ matrix.name }}
        path: src\main\resources\*.dll

    - name: Upload the i18n
      uses: actions/upload-artifact@v4
      if: matrix.name == 'i18n'
      with:
        name: icu-node
        path: icu-node\*.dat

  build_javet_jar:
    needs: [build_javet_v8, build_javet_node]
    name: Build Javet Jar
    runs-on: windows-latest

    steps:

    - name: Set git to use LF
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Setup JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: corretto
        java-version: 8

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.10.2

    - name: Install 7zip
      run: choco install 7zip.install

    - name: Download Javet Node i18n
      uses: actions/download-artifact@v4
      with:
        name: javet-windows-node-x86_64-${{ env.JAVET_VERSION }}-i18n
        path: src\main\resources\

    - name: Download Javet Node non-i18n
      uses: actions/download-artifact@v4
      with:
        name: javet-windows-node-x86_64-${{ env.JAVET_VERSION }}-non-i18n
        path: src\main\resources\

    - name: Download Javet V8 i18n
      uses: actions/download-artifact@v4
      with:
        name: javet-windows-v8-x86_64-${{ env.JAVET_VERSION }}-i18n
        path: src\main\resources\

    - name: Download Javet V8 non-i18n
      uses: actions/download-artifact@v4
      with:
        name: javet-windows-v8-x86_64-${{ env.JAVET_VERSION }}-non-i18n
        path: src\main\resources\

    - name: Prepare i18n Location
      run: |
        mkdir icu-node
        mkdir icu-v8

    - name: Download i18n node
      uses: actions/download-artifact@v4
      with:
        name: icu-node
        path: icu-node

    - name: Download i18n V8
      uses: actions/download-artifact@v4
      with:
        name: icu-v8
        path: icu-v8

    - name: Copy the i18n
      run: |
        mkdir ..\node\deps\icu-tmp
        move icu-node\*.dat ..\node\deps\icu-tmp
        mkdir ..\google\v8\third_party\icu\common
        move icu-v8\*.dat ..\google\v8\third_party\icu\common

    - name: Build the Artifact
      shell: bash
      run: |
        touch src/main/resources/libjavet-v8-*-x86_64.v*
        gradle build test --rerun-tasks
        touch src/main/resources/libjavet-node-*-x86_64.v*
        gradle build test --rerun-tasks
        touch src/main/resources/libjavet-v8-*-x86_64-i18n.v*
        gradle build test --rerun-tasks
        touch src/main/resources/libjavet-node-*-x86_64-i18n.v*
        gradle build test --rerun-tasks
        gradle build generatePomFileForGeneratePomPublication
        7z d build/libs/javet-${{ env.JAVET_VERSION }}-sources.jar *.dll

    - name: Upload the Artifact
      uses: actions/upload-artifact@v4
      with:
        name: javet-windows-x86_64-${{ env.JAVET_VERSION }}
        path: |
          build\libs\*.jar
          build\libs\*.pom

    - name: Delete Javet Node i18n
      uses: geekyeggo/delete-artifact@v4
      with:
        name: javet-windows-node-x86_64-${{ env.JAVET_VERSION }}-i18n

    - name: Delete Javet Node non-i18n
      uses: geekyeggo/delete-artifact@v4
      with:
        name: javet-windows-node-x86_64-${{ env.JAVET_VERSION }}-non-i18n

    - name: Delete Javet V8 i18n
      uses: geekyeggo/delete-artifact@v4
      with:
        name: javet-windows-v8-x86_64-${{ env.JAVET_VERSION }}-i18n

    - name: Delete Javet V8 non-i18n
      uses: geekyeggo/delete-artifact@v4
      with:
        name: javet-windows-v8-x86_64-${{ env.JAVET_VERSION }}-non-i18n
